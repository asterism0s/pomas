@use '../abstracts/button/' as btn;
@use '../abstracts/mixins';
@use '../abstracts/spacing';
@use '../abstracts/colors';



.button {

    @include mixins.btn-reset;

    &--play {
        @include btn.btn-state(idle, false);

        align-items: center;
        display: inline-flex;
        justify-content: center;


        svg {
            flex-shrink: 0; //?
            width: 3rem;
            height: 3rem;
        }
        
        //estado pause
        &[aria-pressed="true"] {
            @include btn.btn-state(idle, true);
            background-color: colors.$elevated-background-base-active-1;
            box-shadow: 0.4rem colors.$elevated-background-base-active-2;

            svg:nth-of-type(1) { 
                display: none;  
            }

            svg:nth-of-type(2) { 
                display: block;
            }
        }

        //estado play
        &[aria-pressed="false"] {
            @include btn.btn-state(idle, false);
            background-color: colors.$elevated-background-base-idle-1;
            box-shadow: 0 .4rem colors.$elevated-background-base-idle-2;


            svg:nth-of-type(1) { 
                display: block;
            }
            
            svg:nth-of-type(2) { 
                display: none;  
            }
        }

        &:hover { 
            @include btn.btn-state(hover);
            background-color: colors.$elevated-background-base-hover-1;
            box-shadow: 0 .4rem colors.$elevated-background-base-hover-2;
        }

        &:active {
            @include btn.btn-state(pressed, true);
            background-color: colors.$elevated-background-base-pressed-1;
            box-shadow: 0 .4rem colors.$elevated-background-base-pressed-2;
        }

        &:disabled {
            @include btn.btn-state(disabled);
            background-color: colors.$elevated-background-base-disabled;
        }
    }

}